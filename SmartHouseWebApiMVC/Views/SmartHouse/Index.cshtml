@using System.Web.Mvc.Html
@using MVCSmartHouse.ViewModels.AdaptInterfacies;
@using SimpleSmartHouse1._0

@model IEnumerable<Device>
@{
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Smart House</title>
    <link rel="stylesheet" href="~/Content/Site.css" />
    <script src="~/scripts/jquery-1.10.2.min.js"></script>
    <script src="~/scripts/bootstrap.min.js"></script>
    @Scripts.Render("~/bundles/jScript")
</head>
<body>
    @using (Html.BeginForm("Add", "SmartHouse"))
    {
        @Html.DropDownList("device", (IEnumerable<SelectListItem>)ViewBag.DeviceList, new { @class = "dropDownDeviceList" })
        <input type="submit" value="Add" class="button" />
        <br />

        foreach (var item in Model)
        {
            <div class="device-div" id="dev-@item.Id">
                @* SET OnOfDel WebAPI*@
                <div class="conditionRow" id="conditionRow-@item.Id">
                    Device: @item.Name
                    <br />
                    @item.ToString()
                    <br>
                    <br>
                </div>
                <span>
                    <a id="on-@(item.Id)" class="button">on</a>
                </span>
                <span>
                    <a id="off-@(item.Id)" class="button">off</a>
                </span>
                <span>
                    <a id="del-@(item.Id)" class="button">del</a>
                </span>
                <input type="hidden" id="Index-@item.Id" value="@item.Id" name="Index">
                <br /><br />

                @if (item is IlluminatorModeAble)
                {
                    <input type="hidden" id="devName-@item.Id" value="Lamp" name="devName">
                    @* Image *@
                if (item.State == true)
                {
                    <img src="~/Content/image/onLamp.png" id="state-@item.Id" class="img" alt="Lamp On">
                }
                else
                {
                    <img src="~/Content/image/offLamp.png" id="state-@item.Id" class="img" alt="Lamp Off">
                }
                <br>
                    <br>
                    @*SET MODE BrightMode*@
                    @Html.DropDownList("ill", new SelectList(new[] {IlluminatorBrightness.BrightWhite.ToString(), IlluminatorBrightness.Daylight.ToString(),
                               IlluminatorBrightness.WarmWhite.ToString(),IlluminatorBrightness.Default.ToString()}),/*
                        (string)Session["illBright"],*/ new { id = "listMode-" + item.Id, @class = "dropDownDeviceList" })
                    <span>
                        <a id="setMode-@(item.Id)" class="button">SetBright</a>
                    </span>
                    <br>
                }

                @* Heater *@
                @if (item is IHandSetTempWarmAble)
                    {
                    <input type="hidden" id="devName-@item.Id" value="Radiator" name="devName">
                    @* Image *@
                if (item.State == true)
                {
                    <img src="~/Content/image/onRadiator.png" id="state-@item.Id" class="img" alt="Radiator On">
                }
                else
                {
                    <img src="~/Content/image/offRadiator.png" id="state-@item.Id" class="img" alt="Radiator Off">
                }
                <br>
                    <br>

                    @* SET TEMP Api *@
                    <span>
                        <a id="setParam-@(item.Id)" class="button">Set temperature</a>
                    </span>
                        @Html.TextBox("warmTemper", "", new { id = "handSetPar-heatTemp" + item.Id, size = "3" })
                        <input type="hidden" id="InputCommand-@item.Id" value="heatTemp" name="SetWarmTemp">
                        <br />
                        <br />

                        @* INC/DEC TEMP Api *@
                        <span>
                            <a id="incT-@(item.Id)" class="button">Temp +</a>
                        </span>
                        <span>
                            <a id="decT-@(item.Id)" class="button">Temp -</a>
                        </span>
                        <br />
                        <br />
                        @* SET MODE Mode*@
                        @Html.DropDownList("warmMode", new SelectList(new[] { Mode.Turbo.ToString(), Mode.Eco.ToString(), Mode.Low.ToString(), Mode.Auto.ToString() }),
                                                 /*(string)Session["wMode"],*/ new { id = "listMode-" + item.Id, @class = "dropDownDeviceList" })
                        @* SET MODE Api *@
                        <span>
                            <a id="setMode-@(item.Id)" class="button">SetBright</a>
                        </span>
                        <br>
                }

                @* AirCondition *@
                @if (item is IHandSetTempColdAble)
                {
                    <input type="hidden" id="devName-@item.Id" value="AirCondition" name="devName">
                    @* Image *@
                if (item.State == true)
                {
                    <img src="~/Content/image/onAirCondition.png" id="state-@item.Id" class="img" alt="AirCondition On">
                }
                else
                {
                    <img src="~/Content/image/offAirCondition.png" id="state-@item.Id" class="img" alt="AirCondition Off">
                }
                <br>
                    <br>
                    @* SET TEMP Api *@
                    <span>
                        <a id="setParam-@(item.Id)" class="button">Set temperature</a>
                    </span>
                        @Html.TextBox("coldTemper", "", new { id = "handSetPar-coldTemp" + item.Id, size = "3" })
                        <input type="hidden" id="InputCommand-@item.Id" value="coldTemp" name="SetColdTemp">
                        <br />
                        <br />
                        @* INC/DEC TEMP Api *@
                        <span>
                            <a id="incT-@(item.Id)" class="button">Temp +</a>
                        </span>
                        <span>
                            <a id="decT-@(item.Id)" class="button">Temp -</a>
                        </span>
                        <br />
                        <br />
                        @* SET MODE Mode MVC*@
                        @Html.DropDownList("coldMode", new SelectList(new[] { Mode.Turbo.ToString(), Mode.Eco.ToString(), Mode.Low.ToString(), Mode.Auto.ToString() }),
                         /*(string)Session["cMode"],*/ new { id = "listMode-" + item.Id, @class = "dropDownDeviceList" })
                        <span>
                            <a id="setMode-@(item.Id)" class="button">SetBright</a>
                        </span>
                }
                @*@if (item is IlluminatorModeAble)
                    {
                        <div id="result-@item.Id">
                            @Html.Partial("PartialLampView", item)
                        </div>
                    }
                    else @if (item is IHandSetTempWarmAble)
                    {
                        <div id="result-@item.Id">
                            @Html.Partial("PartialHeaterView", item)
                        </div>
                    }
                    else @if (item is IHandSetTempColdAble)
                    {
                        <div id="result-@item.Id">
                            @Html.Partial("PartialACView", item)
                        </div>
                    }*@
            </div>
            <script>
                var id = $("#Index-" + @item.Id).val()
                Action(id);
            </script>
        }
    }
    @Scripts.Render("~/bundles/jScript")
</body>
</html>
